name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-2022, macos-12, ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: DanySK/build-check-deploy-gradle-action@2.3.2
        with:
          # Dry-deployment
          check-command: ./gradlew build --parallel
          deploy-command: >-
            ./gradlew
            uploadKotlinOSSRHToMavenCentralNexus
            uploadPluginMavenToMavenCentralNexus
            uploadPluginMarkerMavenToMavenCentralNexus
            close
            drop
            --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: >-
            ${{
              runner.os == 'Linux'
              && !github.event.repository.fork
              && github.event_name != 'pull_request'
            }}
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  release:
    concurrency:
      # Only one release job at a time. Strictly sequential.
      group: release
    needs:
      - build
    runs-on: ubuntu-22.04
    if: >-
      !github.event.repository.fork
      && github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - uses: DanySK/build-check-deploy-gradle-action@2.3.2
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: nicolasfarabegoli
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  success:
    runs-on: ubuntu-22.04
    needs:
      - release
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}